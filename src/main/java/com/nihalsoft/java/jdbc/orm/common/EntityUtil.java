package com.nihalsoft.java.jdbc.orm.common;

import java.beans.BeanInfo;
import java.beans.Introspector;
import java.beans.PropertyDescriptor;
import java.lang.reflect.Method;
import java.util.ArrayList;
import java.util.List;

import com.nihalsoft.java.jdbc.orm.annotation.Column;
import com.nihalsoft.java.jdbc.orm.annotation.Table;

public class EntityUtil {

    public static String getTableName(SysEntity entity) {
        return getTableName(entity.getClass());
    }

    /**
     * --------------------------------------------------------------------------------
     * 
     * @param clazz
     * @return
     * @throws Exception
     */
    public static String getTableName(Class<?> clazz) {
        Table tbl = clazz.getAnnotation(Table.class);
        if (tbl == null) {
            return "";
        }
        return tbl.name();
    }

    /**
     * --------------------------------------------------------------------------------
     * 
     * @param clazz
     * @return
     * @throws Exception
     */
    public static EntityDescriptor getDescriptor(Class<?> clazz) throws Exception {
        return EntityUtil._getInfo(clazz, null, null);
    }

    public static EntityDescriptor getDescriptor(Class<?> clazz, String... cols) throws Exception {
        return EntityUtil._getInfo(clazz, null, null);
    }

    /**
     * --------------------------------------------------------------------------------
     * 
     * @param entity
     * @param filter
     * @return
     * @throws Exception
     */
    public static EntityDescriptor getDescriptor(SysEntity entity) throws Exception {
        return EntityUtil._getInfo(entity.getClass(), entity, null);
    }

    public static EntityDescriptor getDescriptor(SysEntity entity, String... cols) throws Exception {
        return EntityUtil._getInfo(entity.getClass(), entity, cols);
    }

    /**
     * --------------------------------------------------------------------------------
     * 
     * @param clazz
     * @param object
     * @param consumer
     * @throws Exception
     */
    public static EntityDescriptor _getInfo(Class<?> clazz, SysEntity entity, String... cols) throws Exception {

        var dataMap = new DataMap();

        int colLen = cols == null ? 0 : cols.length;
        
        if (colLen > 0) {
            for (var s : cols) {
                dataMap.put(s, 1);
            }
        }

        List<ColumnInfo> columns = new ArrayList<ColumnInfo>();

        BeanInfo bi = Introspector.getBeanInfo(clazz);

        for (PropertyDescriptor property : bi.getPropertyDescriptors()) {

            if (property.getName().equals("class")) {
                continue;
            }

            Method getter = property.getReadMethod();
            if (!getter.isAnnotationPresent(Column.class)) {
                continue;
            }
            Column e = getter.getAnnotation(Column.class);
            if (e != null) {
                if (!e.persist() || e.autoGeneratedId()) {
                    continue;
                }
            }
            String name = (e != null && !e.name().equals("")) ? e.name() : property.getName();
            if (colLen > 0 && !dataMap.containsKey(name)) {
                continue;
            }
            Object value = null;
            if (entity != null) {
                value = getter.invoke(entity);
            }
            columns.add(new ColumnInfo(name, value, e));
            dataMap.put(name, value);
        }

        Table tbl = clazz.getAnnotation(Table.class);

        return new EntityDescriptor(tbl.name(), columns, dataMap);

    }
}
